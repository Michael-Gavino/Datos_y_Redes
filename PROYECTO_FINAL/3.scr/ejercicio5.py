# =====================================================
# AUTENTICACI√ìN Y AUTORIZACI√ìN EN API GATEWAY (Simulaci√≥n)
# =====================================================
# Este script simula los tres m√©todos m√°s comunes de autenticaci√≥n
# y autorizaci√≥n en Amazon API Gateway:
# 1. API Key
# 2. IAM (Identity and Access Management)
# 3. Amazon Cognito (basado en tokens JWT)
# Cada funci√≥n representa un m√©todo de autenticaci√≥n diferente
# y retorna True o False dependiendo si el acceso es permitido.

# =====================================================
# FUNCI√ìN: usar_api_key
# =====================================================
def usar_api_key(api_key):
    """
    Simula la autenticaci√≥n mediante una API Key en API Gateway.

    Args:
        api_key (str): Clave API proporcionada por el cliente.

    Returns:
        bool: True si la clave es v√°lida, False en caso contrario.
    """
    return api_key == 'mi_clave'  # Compara con una clave predefinida


# =====================================================
# FUNCI√ìN: autorizar_con_iam
# =====================================================
def autorizar_con_iam(rol_usuario):
    """
    Simula la autorizaci√≥n basada en pol√≠ticas IAM (Identity and Access Management).

    Args:
        rol_usuario (str): Rol o perfil del usuario (por ejemplo: admin, developer).

    Returns:
        bool: True si el rol tiene permisos, False si no est√° autorizado.
    """
    # Solo los roles con privilegios ('admin' o 'developer') son autorizados
    return rol_usuario in ['admin', 'developer']


# =====================================================
# FUNCI√ìN: autorizar_con_cognito
# =====================================================
def autorizar_con_cognito(token):
    """
    Simula la autenticaci√≥n con Amazon Cognito usando un token JWT.

    Args:
        token (str): Token JWT proporcionado por el usuario.

    Returns:
        bool: True si el token es v√°lido, False en caso contrario.
    """
    # Verifica si el token coincide con el valor esperado
    return token == 'token_valido'


# =====================================================
# BLOQUE PRINCIPAL DE EJECUCI√ìN
# =====================================================
# Aqu√≠ simulamos la validaci√≥n de acceso usando los tres m√©todos
# de autenticaci√≥n definidos anteriormente. En un entorno real,
# estas validaciones se har√≠an autom√°ticamente desde API Gateway.
if __name__ == '__main__':
    # ‚úÖ Simulaci√≥n de autenticaci√≥n mediante API Key
    if usar_api_key('mi_clave'):
        print("üîë Clave API v√°lida. ‚úÖ Acceso permitido.")

    # ‚úÖ Simulaci√≥n de autorizaci√≥n mediante IAM
    if autorizar_con_iam('admin'):
        print("üë§ Usuario autorizado por IAM. ‚úÖ Acceso permitido.")

    # ‚úÖ Simulaci√≥n de autenticaci√≥n mediante Amazon Cognito
    if autorizar_con_cognito('token_valido'):
        print("üîê Usuario autorizado por Cognito. ‚úÖ Acceso permitido.")
